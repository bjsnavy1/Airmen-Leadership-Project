#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Airman_Leadership
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AirmanLeadership")]
	public partial class AttendanceInfoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttendee(Attendee instance);
    partial void UpdateAttendee(Attendee instance);
    partial void DeleteAttendee(Attendee instance);
    #endregion
		
		public AttendanceInfoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AirmanLeadershipConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AttendanceInfoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttendanceInfoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttendanceInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttendanceInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attendee> Attendees
		{
			get
			{
				return this.GetTable<Attendee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendees")]
	public partial class Attendee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttendeeID;
		
		private string _Student;
		
		private string _Fname;
		
		private string _Lname;
		
		private string _Rank;
		
		private string _Dvisitor;
		
		private bool _Cash;
		
		private bool _Credit;
		
		private System.DateTime _AppDate;
		
		private string _Meal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendeeIDChanging(int value);
    partial void OnAttendeeIDChanged();
    partial void OnStudentChanging(string value);
    partial void OnStudentChanged();
    partial void OnFnameChanging(string value);
    partial void OnFnameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    partial void OnRankChanging(string value);
    partial void OnRankChanged();
    partial void OnDvisitorChanging(string value);
    partial void OnDvisitorChanged();
    partial void OnCashChanging(bool value);
    partial void OnCashChanged();
    partial void OnCreditChanging(bool value);
    partial void OnCreditChanged();
    partial void OnAppDateChanging(System.DateTime value);
    partial void OnAppDateChanged();
    partial void OnMealChanging(string value);
    partial void OnMealChanged();
    #endregion
		
		public Attendee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendeeID
		{
			get
			{
				return this._AttendeeID;
			}
			set
			{
				if ((this._AttendeeID != value))
				{
					this.OnAttendeeIDChanging(value);
					this.SendPropertyChanging();
					this._AttendeeID = value;
					this.SendPropertyChanged("AttendeeID");
					this.OnAttendeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				if ((this._Student != value))
				{
					this.OnStudentChanging(value);
					this.SendPropertyChanging();
					this._Student = value;
					this.SendPropertyChanged("Student");
					this.OnStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fname
		{
			get
			{
				return this._Fname;
			}
			set
			{
				if ((this._Fname != value))
				{
					this.OnFnameChanging(value);
					this.SendPropertyChanging();
					this._Fname = value;
					this.SendPropertyChanged("Fname");
					this.OnFnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lname
		{
			get
			{
				return this._Lname;
			}
			set
			{
				if ((this._Lname != value))
				{
					this.OnLnameChanging(value);
					this.SendPropertyChanging();
					this._Lname = value;
					this.SendPropertyChanged("Lname");
					this.OnLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dvisitor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Dvisitor
		{
			get
			{
				return this._Dvisitor;
			}
			set
			{
				if ((this._Dvisitor != value))
				{
					this.OnDvisitorChanging(value);
					this.SendPropertyChanging();
					this._Dvisitor = value;
					this.SendPropertyChanged("Dvisitor");
					this.OnDvisitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Bit NOT NULL")]
		public bool Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Bit NOT NULL")]
		public bool Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppDate", DbType="DateTime NOT NULL")]
		public System.DateTime AppDate
		{
			get
			{
				return this._AppDate;
			}
			set
			{
				if ((this._AppDate != value))
				{
					this.OnAppDateChanging(value);
					this.SendPropertyChanging();
					this._AppDate = value;
					this.SendPropertyChanged("AppDate");
					this.OnAppDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meal", DbType="NVarChar(50)")]
		public string Meal
		{
			get
			{
				return this._Meal;
			}
			set
			{
				if ((this._Meal != value))
				{
					this.OnMealChanging(value);
					this.SendPropertyChanging();
					this._Meal = value;
					this.SendPropertyChanged("Meal");
					this.OnMealChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
